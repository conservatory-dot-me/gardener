# Generated by Django 2.2.1 on 2019-07-28 07:43

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('latitude', models.FloatField(help_text='Latitude where the device is deployed.', validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.FloatField(help_text='Longitude where the device is deployed.', validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('location', models.ForeignKey(help_text='Location for weather forecasts.', on_delete=django.db.models.deletion.CASCADE, to='data.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Pump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relay_type', models.PositiveSmallIntegerField(default=1)),
                ('gpio_export_num', models.PositiveSmallIntegerField(help_text='GPIO export number connected to this pump.')),
                ('is_active', models.BooleanField(default=True)),
                ('max_duration', models.PositiveSmallIntegerField(default=600, help_text='Max. duration in seconds per run.')),
                ('scheduled_run_default_duration', models.FloatField(default=60, help_text='Default scheduled runtime duration in seconds.')),
                ('scheduled_run_frequency', models.FloatField(blank=True, choices=[(0.04167, 'Hourly'), (0.125, '3-Hourly'), (1.0, 'Daily'), (7.0, 'Weekly'), (30.0, 'Monthly')], default=1.0, help_text='In days.', null=True)),
                ('scheduled_run_email_notification_recipients', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, null=True, size=None)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Device')),
            ],
            options={
                'ordering': ('gpio_export_num',),
            },
        ),
        migrations.CreateModel(
            name='ScheduledRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('duration', models.FloatField(help_text='Runtime duration in seconds.')),
                ('pump', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Pump')),
                ('weather_forecast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.WeatherForecast')),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('pump', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Pump')),
                ('scheduled_run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='device.ScheduledRun')),
            ],
        ),
        migrations.CreateModel(
            name='PopToPumpDuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pop', models.PositiveSmallIntegerField(help_text='Probability of precipitation in %.', verbose_name='POP')),
                ('duration', models.FloatField(help_text='Runtime duration in seconds.')),
                ('pump', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Pump')),
            ],
            options={
                'verbose_name': 'POP to pump duration',
            },
        ),
        migrations.CreateModel(
            name='Light',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relay_type', models.PositiveSmallIntegerField(default=1)),
                ('gpio_export_num', models.PositiveSmallIntegerField(help_text='GPIO export number connected to this light.')),
                ('is_active', models.BooleanField(default=True)),
                ('start_time', models.TimeField()),
                ('duration', models.FloatField(help_text='Runtime duration in seconds.')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lcd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relay_type', models.PositiveSmallIntegerField(default=1)),
                ('sw1_gpio_export_num', models.PositiveSmallIntegerField(blank=True, help_text='GPIO export number for switch 1.', null=True)),
                ('sw2_gpio_export_num', models.PositiveSmallIntegerField(blank=True, help_text='GPIO export number for switch 2.', null=True)),
                ('led_gpio_export_nums', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), blank=True, null=True, size=None)),
                ('is_active', models.BooleanField(default=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Device')),
                ('pump', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='device.Pump')),
            ],
            options={
                'verbose_name': 'LCD',
                'verbose_name_plural': 'LCDs',
            },
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('index', models.PositiveSmallIntegerField(default=0, help_text='Camera index passed to cv2.')),
                ('snapshot_extension', models.CharField(default='jpg', max_length=3)),
                ('snapshot_frequency', models.PositiveIntegerField(default=3600, help_text='In seconds.')),
                ('snapshot_duration', models.PositiveIntegerField(default=0)),
                ('current_snapshot', models.PositiveIntegerField(default=0)),
                ('max_snapshots', models.PositiveIntegerField(default=100)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.Device')),
            ],
        ),
    ]
